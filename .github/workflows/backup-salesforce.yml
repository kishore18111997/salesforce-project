name: Automated Salesforce Backup

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - master 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Salesforce CLI
        run: |
          npm install --global sfdx-cli@7.209.6
          export PATH="/home/runner/.npm-global/bin:$PATH"
          sfdx --version
      
      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.SF_PRIVATE_KEY }}" > server.key
          sfdx force:auth:jwt:grant --client-id ${{ secrets.SF_CONSUMER_KEY }}   --jwt-key-file server.key --username ${{ secrets.SF_USERNAME }}   --instance-url https://login.salesforce.com --set-default-dev-hub

      - name: Verify Authentication
        run: sfdx org:list
      
      - name: backup Salesforce Configuration
        run: |
          sfdx force:source:retrieve -p force-app -u ${{ secrets.SF_USERNAME }}

      - name: Backup Salesforce data
        run: |
          mkdir -p data
          OBJECTS=$(sfdx force:data:soql:query -q "SELECT QualifiedApiName FROM EntityDefinition WHERE IsCustomSetting = FALSE AND IsEverCreatable = TRUE" --target-org ${{ secrets.SF_USERNAME }} --json | jq -r '.result.records[].QualifiedApiName')
          for OBJECT in $OBJECTS; do
              echo "Backing up: $OBJECT"
              FIELDS=$(sfdx force:data:soql:query -q "SELECT QualifiedApiName FROM FieldDefinition WHERE EntityDefinition.QualifiedApiName = '$OBJECT'" --target-org ${{ secrets.SF_USERNAME }} --json | jq -r '.result.records[].QualifiedApiName' | paste -sd "," -)
              if [ -n "$FIELDS" ]; then
                  sfdx force:data:tree:export -q "SELECT $FIELDS FROM $OBJECT" -d ./data --target-org ${{ secrets.SF_USERNAME }} || echo "Skipped $OBJECT due to query failure" && true
              else
                  echo "Skipping $OBJECT (No fields found)"
              fi
          done
          echo "Backup completed!"

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          aws --version

      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_DEFAULT_REGION
      
      - name: Upload Backup to S3
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          S3_BUCKET_NAME=$S3_BUCKET_NAME
          S3_FOLDER="salesforce-backup/$TIMESTAMP"
          
          echo "Uploading backup to S3: s3://$S3_BUCKET_NAME/$S3_FOLDER"
          
          aws s3 cp --recursive ./data s3://$S3_BUCKET_NAME/$S3_FOLDER/data
          aws s3 cp --recursive ./force-app s3://$S3_BUCKET_NAME/$S3_FOLDER/force-app

          echo "Backup successfully uploaded to S3!"
